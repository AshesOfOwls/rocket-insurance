{"version":3,"sources":["routes/Home/Home.module.css","components/atoms/Inputs/Base/InputBase.module.css","routes/RatingInformation/QuotesList/QuotesList.module.css","components/atoms/Inputs/Label/Label.module.css","components/atoms/Avatar/Avatar.module.css","routes/RatingInformation/RatingInformation.module.css","routes/QuoteOverview/QuoteOverview.module.css","App/App.module.css","App/ApolloProvider/index.tsx","App/StyleProvider/index.tsx","routes/Home/logo.svg","components/atoms/Typography/index.tsx","components/atoms/Icon/library.ts","components/atoms/Icon/index.tsx","components/atoms/Button/index.tsx","App/Layout/Header/index.tsx","App/Layout/index.tsx","routes/Home/index.tsx","data/hooks/useQuery.tsx","data/graphql/queries/quotes/Quotes.ts","data/hooks/queries/quotes.tsx","data/hooks/useMutation.tsx","data/graphql/mutations/quotes/CreateQuote.ts","data/hooks/mutations/createQuote.tsx","components/atoms/Inputs/Label/index.tsx","components/atoms/Inputs/Base/index.tsx","components/atoms/Inputs/Text/index.tsx","components/atoms/Inputs/Places/index.tsx","routes/RatingInformation/CreateQuoteButtonModal/index.tsx","components/atoms/Avatar/index.tsx","routes/RatingInformation/QuotesList/QuoteRow/index.tsx","routes/RatingInformation/QuotesList/index.tsx","routes/RatingInformation/index.tsx","data/graphql/queries/quotes/Quote.ts","data/hooks/queries/quote.tsx","components/atoms/Inputs/Select/index.tsx","routes/QuoteOverview/index.tsx","App/Router/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx","components/atoms/Typography/Typography.module.css","components/atoms/Button/Button.module.css","components/atoms/Inputs/Places/Places.module.css","routes/RatingInformation/QuotesList/QuoteRow/QuoteRow.module.css","components/atoms/Icon/Icon.module.css","App/Layout/Header/Header.module.css"],"names":["module","exports","typeDefs","gql","restLink","RestLink","uri","responseTransformer","response","a","json","then","data","quote","client","ApolloClient","link","cache","InMemoryCache","connectToDevTools","ApolloProviderWrapper","props","children","ApolloProvider","StyleProvider","BaseText","Element","bold","uppercase","textType","style","inline","className","classnames","s","Body","otherProps","LabelText","Small","ButtonText","H1","H2","H3","H4","H5","AddedIcons","Object","entries","fas","fab","Icons","forEach","entry","push","library","add","Icon","name","size","spin","icon","Button","onClick","buttonType","disabled","loading","type","button","Header","navigate","useNavigate","header","logoWrapper","src","logo","alt","Layout","Home","home","margin","appLogo","useQuery","query","options","onCompleted","onError","otherOptions","useApolloQuery","e","fetchPolicy","QUOTES_QUERY","useQuotes","quotes","useMutation","mutation","useApolloMutation","CREATE_QUOTE","useCreateQuote","createQuote","update","cachedData","readQuery","writeQuery","InputLabel","text","label","InputBase","value","onChange","onInputChange","inputWrapper","input","currentTarget","TextInput","PlacesInput","onSelect","useState","address","setAddress","addressTypeMatches","addressType","matchedType","some","includes","getLine1","previousValue","currentValue","types","short_name","getLine2","getCity","getRegion","getPostal","retrieveGeocode","geocodeByAddress","results","console","log","addressComponents","address_components","parsedAddress","line_1","reduce","line_2","city","region","postal","placesWrapper","getInputProps","suggestions","getSuggestionItemProps","Text","placeholder","length","autocompleteDropdownContainer","map","suggestion","active","suggestionItemActive","suggestionItem","backgroundColor","cursor","key","description","CreateQuoteButtonModal","quoteModalOpen","setQuoteModalOpen","firstName","setFirstName","lastName","setLastName","setParsedAddress","closeModal","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","overflow","marginBottom","Places","addressNormal","variables","first_name","last_name","Avatar","color","randomColor","seed","luminosity","firstInitial","lastInitial","avatar","QuoteRow","rating_address","values","join","quoteRow","shrink","policy_holder","premium","prefix","displayType","quoteId","QuotesList","quotesList","quotesListTable","RatingInformation","xs","createQuoteButton","QUOTE_QUERY","useQuote","SelectInput","Label","isSearchable","QuoteOverview","useParams","variable_selections","deductible","asteroid_collision","variable_options","deductibleOptions","activeDeductible","filter","option","asteroidCollisionOptions","activeCollision","dataBox","display","alignItems","Select","routes","path","element","to","RouterElement","useRoutes","App","useEffect","googleMapScript","document","createElement","process","async","window","body","appendChild","app","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bbaa661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1Dk8M\",\"appLogo\":\"Home_appLogo__3r87T\",\"App-logo-spin\":\"Home_App-logo-spin__3puk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputBase_inputWrapper__gwWFH\",\"input\":\"InputBase_input__1vIYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotesListTable\":\"QuotesList_quotesListTable__n-jTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__1zCEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__328LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createQuoteButton\":\"RatingInformation_createQuoteButton__1hgre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBox\":\"QuoteOverview_dataBox__1RwUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__28qQO\",\"app\":\"App_app__13Yue\"};","import {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\nimport { gql } from '@apollo/client';\nimport { RestLink } from 'apollo-link-rest';\n\nconst typeDefs = gql`\n  type Quote {\n    quoteId: ID\n    rating_address: RatingAddress\n    policy_holder: PolicyHolder\n    variable_options: VariableOptions\n    variable_selections: VariableSelections\n    premium: Integer\n  }\n\n  type RatingAddress {\n    line_1: String\n    line_2: String\n    city: String\n    region: String\n    postal: String\n  }\n  \n  type PolicyHolder {\n    first_name: String\n    last_name: String\n  }\n\n  type VariableOptions {\n    deductible: Deductible\n    asteroid_collision: AsteroidCollision\n  }\n\n  type Deductible {\n    title: String\n    description: String\n    values: [Integer]\n  }\n\n  type AsteroidCollision {\n    title: String\n    description: String\n    values: [Integer]\n  }\n\n  type VariableSelections {\n    deductible: Integer\n    asteroid_collision: Integer\n  }\n`;\n\nconst restLink = new RestLink({\n  uri: 'https://fed-challenge-api.sure.now.sh/api/v1',\n  responseTransformer: async response => response.json().then((data: any) => data.quote),\n});\n\nconst client = new ApolloClient({\n  link: restLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n  typeDefs,\n});\n\nexport interface ApolloProviderProps {\n  children: React.ReactNode,\n}\n\nconst ApolloProviderWrapper = (props: ApolloProviderProps) => {\n  const { children } = props;\n\n  return (\n    <ApolloProvider client={client}>\n      { children }\n    </ApolloProvider>\n  );\n};\n\nexport default ApolloProviderWrapper;\n","import './variables.css';\nimport './fonts.css';\n\nexport interface StyleProviderProps {\n  children: React.ReactNode,\n}\n\nconst StyleProvider = (props: StyleProviderProps) => {\n  const { children } = props;\n\n  return (<>{ children }</>);\n};\n\nexport default StyleProvider;\n","export default __webpack_public_path__ + \"static/media/logo.838f9047.svg\";","import classnames from 'classnames';\n\nimport s from './Typography.module.css';\n\nexport interface BaseTextProps {\n  Element?: 'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5'\n  textType?: 'small' | 'labelText' | 'body' | 'buttonText' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5'\n  children: React.ReactNode\n  bold?: boolean\n  uppercase?: boolean\n  style?: any\n  inline?: boolean,\n}\n\nconst BaseText = (props: BaseTextProps) => {\n  const { Element = 'div', children, bold, uppercase, textType = 'body', style, inline } = props;\n\n  return (\n    <Element\n      className={classnames([s[textType]], { [s.bold]: bold, [s.uppercase]: uppercase, [s.inline]: inline })}\n      style={style}\n    >\n      { children }\n    </Element>\n  );\n}\n\nexport default BaseText;\n\nconst Body = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='div' {...otherProps} textType=\"body\">\n      { children }\n    </BaseText>\n  );\n};\n\nexport { Body };\n\nconst LabelText = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='div' {...otherProps} textType=\"labelText\" uppercase>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { LabelText };\n\nconst Small = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='div' {...otherProps} textType=\"small\">\n      { children }\n    </BaseText>\n  );\n};\n\nexport { Small };\n\nconst ButtonText = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='div' {...otherProps} textType=\"buttonText\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { ButtonText };\n\nconst H1 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='h1' {...otherProps} textType=\"h1\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H1 };\n\nconst H2 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h2' {...otherProps} textType=\"h2\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H2 };\n\nconst H3 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h3' {...otherProps} textType=\"h3\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H3 };\n\nconst H4 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h4' {...otherProps} textType=\"h4\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H4 };\n\nconst H5 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h5' {...otherProps} textType=\"h5\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H5 };","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nconst AddedIcons: any = [\n  ...Object.entries(fas),\n  ...Object.entries(fab),\n];\n\nconst Icons: any = [];\n\nAddedIcons.forEach((entry: any) => {\n  Icons.push(entry[1]);\n});\n\nlibrary.add(fas, fab);\n\nexport default Icons;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport './library';\nimport Icons from './icons';\nimport s from './Icon.module.css';\n\nexport interface IconProps {\n  name: typeof Icons[number],\n  size: 'small' | 'medium' | 'large',\n  spin?: boolean,\n}\n\nconst Icon = (props: IconProps) => {\n  const {\n    name = 'check-square',\n    size = 'medium',\n    spin,\n  } = props;\n\n  return (\n    <div className={classnames(s.icon, s[size], { [s.spin]: spin })}>\n      <FontAwesomeIcon icon={name} />\n    </div>\n  );\n};\n\nexport default Icon;\n","import s from './Button.module.css';\nimport Icon from 'components/atoms/Icon';\nimport classnames from 'classnames';\n\nimport { ButtonText } from 'components/atoms/Typography';\n\nexport interface ButtonProps {\n  onClick(): void,\n  children: React.ReactNode,\n  buttonType?: 'primary' | 'secondary',\n  size?: 'small' | 'medium',\n  disabled?: boolean,\n  loading?: boolean,\n}\n\nconst Button = (props: ButtonProps) => {\n  const {\n    children,\n    onClick,\n    buttonType = 'primary',\n    size = 'medium',\n    disabled,\n    loading,\n  } = props;\n\n  return (\n    <button\n      onClick={onClick}\n      type=\"button\"\n      className={classnames(s.button, s[buttonType], s[size], { [s.disabled]: disabled })}\n      disabled={disabled}\n    >\n      <ButtonText>{!loading ? children : <Icon name=\"spinner\" size=\"small\" spin /> }</ButtonText>\n    </button>\n  );\n}\n\nexport default Button;","import logo from 'routes/Home/logo.svg';\nimport { H5 } from 'components/atoms/Typography';\nimport Button from 'components/atoms/Button';\nimport { useNavigate } from \"react-router-dom\";\n\nimport s from './Header.module.css';\n\nexport interface HeaderProps {};\n\nconst Header = (props: HeaderProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className={s.header}>\n      <div className={s.logoWrapper} onClick={() => navigate('/home')}>\n        <img src={logo} className={s.logo} alt=\"logo\" />\n        <H5>Rocket Insurance</H5>\n      </div>\n      <div>\n        <Button onClick={() => navigate('/rating')} size=\"small\">Rating Information</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Outlet } from \"react-router-dom\";\nimport StyleProvider from 'App/StyleProvider';\nimport Header from './Header';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nexport interface LayoutProps {}\n\nconst Layout = (props: LayoutProps) => (\n  <StyleProvider>\n    <Header />\n\n    <Grid>\n      <Row>\n        <Col>\n          <Outlet />\n        </Col>\n      </Row>\n    </Grid>\n  </StyleProvider>\n);\n\nexport default Layout;\n","import { useNavigate } from \"react-router-dom\";\nimport Button from 'components/atoms/Button';\nimport { H1, H5, H4 } from 'components/atoms/Typography';\n\nimport logo from './logo.svg';\n\nimport s from './Home.module.css';\n\nexport interface HomeProps {}\n\nconst Home = (props: HomeProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className={s.home}>\n      <H1>Rocket Insurance</H1>\n      <H5 style={{ margin: '15px 0' }}>A project by Quinn Elwood</H5>\n      <img src={logo} className={s.appLogo} alt=\"logo\" />\n      <H4 style={{ margin: '15px 0 20px' }}>Sometimes Newton happens. Get a quote now!</H4>\n      <Button onClick={() => navigate('/rating')}>BLAST OFF!</Button>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useQuery as useApolloQuery, QueryHookOptions } from \"@apollo/react-hooks\";\nimport { DocumentNode } from 'graphql';\n\nconst useQuery = (query: DocumentNode, options: QueryHookOptions) => {\n  const { onCompleted = () => {}, onError = () => {}, ...otherOptions } = options;\n\n  const data = useApolloQuery(query, {\n    onError: (e) => onError(e),\n    onCompleted: (data) => onCompleted({ data }),\n    ...otherOptions,\n    fetchPolicy: 'cache-only',\n  });\n\n  return data;\n};\n\nexport default useQuery;\n","import { gql } from '@apollo/client';\n\nimport QuoteFull from 'data/fragments/QuoteFull'; // eslint-disable-line\n\nconst QUOTES_QUERY = gql`\n  query Quotes {\n    quotes: QuoteFull\n  }\n`;\n\nexport default QUOTES_QUERY;\n","import useQuery from 'data/hooks/useQuery';\nimport QUOTES_QUERY from 'data/graphql/queries/quotes/Quotes';\n\nconst useQuotes = () => {\n  const { data, loading } = useQuery(QUOTES_QUERY, {});\n\n  if (loading) return null;\n  if (!data || !data.quotes) return [];\n\n  return data.quotes || [];\n}\n\nexport default useQuotes;","import { useMutation as useApolloMutation, MutationHookOptions } from \"@apollo/react-hooks\";\nimport { DocumentNode } from 'graphql';\n\nconst useMutation = (mutation: DocumentNode, options: MutationHookOptions) => {\n  const { onCompleted = () => {}, onError = () => {}, ...otherOptions } = options;\n\n  const mutate = useApolloMutation(mutation, {\n    onError: (e) => onError(e),\n    onCompleted: (data) => onCompleted({ data }),\n    ...otherOptions,\n  });\n\n  return mutate;\n};\n\nexport default useMutation;\n","import { gql } from '@apollo/client';\n\nimport QuoteFull from 'data/fragments/QuoteFull'; // eslint-disable-line\n\nconst CREATE_QUOTE = gql`\n  fragment QuoteInput on REST {\n    ...PolicyHolder\n    address {\n      ...Address\n    }\n  }\n\n  fragment Address on any { \n    line_1\n    line_2\n    city\n    region\n    postal\n  }\n\n  fragment PolicyHolder on any {\n    last_name\n    first_name\n  }\n\n  fragment VariableOptions on Quote {\n    deductible {\n      title\n      description\n      values\n    }\n    asteroid_collision {\n      title\n      description\n      values\n    }\n  }\n\n  fragment VariableSelections on Quote {\n    deductible\n    asteroid_collision\n  }\n\n  fragment QuoteParts on Quote {\n    quoteId\n    policy_holder: PolicyHolder\n    rating_address: Address\n    variable_options: VariableOptions\n    variable_selections: VariableSelections\n    premium\n  }\n\n  mutation CreateQuote($input: QuoteInput!) {\n    createQuote(input: $input) @rest(\n        method: \"POST\",\n        type: \"Quote\",\n        path: \"/quotes\"\n      ) {\n      ...QuoteParts\n    }\n  }\n`;\n\nexport default CREATE_QUOTE;\n","import useMutation from 'data/hooks/useMutation';\nimport CREATE_QUOTE from 'data/graphql/mutations/quotes/CreateQuote';\nimport QUOTES_QUERY from 'data/graphql/queries/quotes/Quotes';\n\nconst useCreateQuote = (onCompleted = () => {}) => {\n  const createQuote = useMutation(CREATE_QUOTE, {\n    update(cache, { data }) {\n      if (!data || !data.createQuote) return;\n\n      const quote = data.createQuote;\n\n      const cachedData = cache.readQuery<any>({\n        query: QUOTES_QUERY,\n      }) || { quotes: [] };\n\n      cache.writeQuery({\n        query: QUOTES_QUERY,\n        data: { quotes: [...cachedData.quotes, quote] },\n      });\n    },\n    onCompleted,\n  });\n\n  return createQuote;\n}\n\nexport default useCreateQuote;","import { LabelText } from 'components/atoms/Typography';\n\nimport s from './Label.module.css';\n\nexport interface InputLabelProps {\n  text: string\n}\n\nconst InputLabel = (props: InputLabelProps) => {\n  const { text } = props;\n\n  return (\n    <label className={s.label}><LabelText>{ text }</LabelText></label>\n  );\n};\n\nexport default InputLabel;\n","import InputLabel from 'components/atoms/Inputs/Label';\nimport s from './InputBase.module.css';\nimport classnames from 'classnames';\nimport { InputHTMLAttributes } from 'react';\n\nexport interface InputBaseProps extends InputHTMLAttributes<HTMLInputElement> {\n  value?: string | number,\n  type?: string,\n  onInputChange?(e: React.FormEvent<HTMLInputElement>, val: string): void,\n  disabled?: boolean,\n  label?: string,\n}\n\nconst InputBase = (props: InputBaseProps) => {\n  const { value, onChange, onInputChange, type, disabled, label, ...otherProps } = props;\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if(!onInputChange) return;\n    onInputChange(e, e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.inputWrapper}>\n      {label && (<InputLabel text={label} />)}\n      <input\n        className={classnames(s.input)}\n        value={value}\n        onChange={onChange || handleChange}\n        type={type}\n        disabled={disabled}\n        {...otherProps}\n      />\n    </div>\n  );\n};\n\nexport default InputBase;\n","import InputBase, { InputBaseProps } from \"components/atoms/Inputs/Base\";\n\nexport interface TextInputProps extends InputBaseProps {}\n\nconst TextInput = (props: TextInputProps) => {\n  return (\n    <InputBase {...props} />\n  )\n};\n\nexport default TextInput;\n","import { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport TextInput from 'components/atoms/Inputs/Text';\nimport { geocodeByAddress } from 'react-places-autocomplete';\n\nimport s from './Places.module.css';\n\nexport interface PlacesInputProps {\n  onSelect(parsed: any, address: string): void,\n  onChange(value: string): void,\n}\n\nconst PlacesInput = (props: PlacesInputProps) => {\n  const { onChange, onSelect } = props;\n\n  const [address, setAddress] = useState('');\n\n  const handleChange = (value: string) => {\n    setAddress(value);\n    onChange(value);\n  }\n\n  const handleSelect = (value: any) => {\n    setAddress(value);\n    retrieveGeocode(value);\n  }\n\n  const addressTypeMatches = (addressType: string[], matchedType: string[]) => {\n    return addressType.some(type => matchedType.includes(type));\n  };\n\n  const getLine1 = (previousValue: any, currentValue: any) => {\n    if (!addressTypeMatches(currentValue.types, ['street_number', 'route'])) return previousValue;\n\n    if (!previousValue) return currentValue.short_name;\n    return previousValue + ' ' + currentValue.short_name;\n  };\n\n  const getLine2 = (previousValue: any, currentValue: any) => {\n    if (!addressTypeMatches(currentValue.types, ['unit'])) return previousValue;\n\n    if (!previousValue) return currentValue.short_name;\n    return previousValue + ' ' + currentValue.short_name;\n  };\n\n  const getCity = (previousValue: any, currentValue: any) => {\n    if (!addressTypeMatches(currentValue.types, ['locality'])) return previousValue;\n\n    if (!previousValue) return currentValue.short_name;\n    return previousValue + ' ' + currentValue.short_name;\n  };\n\n  const getRegion = (previousValue: any, currentValue: any) => {\n    if (!addressTypeMatches(currentValue.types, ['administrative_area_level_1'])) return previousValue;\n\n    if (!previousValue) return currentValue.short_name;\n    return previousValue + ' ' + currentValue.short_name;\n  };\n\n  const getPostal = (previousValue: any, currentValue: any) => {\n    if (!addressTypeMatches(currentValue.types, ['postal_code'])) return previousValue;\n\n    if (!previousValue) return currentValue.short_name;\n    return previousValue + ' ' + currentValue.short_name;\n  };\n\n  const retrieveGeocode = (address: string) => {\n    geocodeByAddress(address).then((results) => {\n      const data = results[0];\n\n      console.log(data)\n      if (!data) return;\n\n      const addressComponents = data.address_components;\n\n      const parsedAddress = {\n        line_1: addressComponents.reduce(getLine1, ''),\n        line_2: addressComponents.reduce(getLine2, ''),\n        city: addressComponents.reduce(getCity, ''),\n        region: addressComponents.reduce(getRegion, ''),\n        postal: addressComponents.reduce(getPostal, ''),\n      }\n\n      onSelect(parsedAddress, address);\n    })\n  }\n\n  return (\n    <div className={s.placesWrapper}>\n      <PlacesAutocomplete\n        value={address}\n        onChange={handleChange}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <TextInput\n              label=\"Address\"\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n              })}\n            />\n            {loading && <div>Loading...</div>}\n            {suggestions.length > 0 && (\n              <div className={s.autocompleteDropdownContainer}>\n                {suggestions.map(suggestion => {\n                  console.log(\"suggestion\", suggestion)\n                  const className = suggestion.active\n                    ? s.suggestionItemActive\n                    : s.suggestionItem;\n                  // inline style for demonstration purpose\n                  const style = suggestion.active\n                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, {\n                        className,\n                        style,\n                      })}\n                      key={suggestion.description}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </div>\n  );\n}\n\nexport default PlacesInput;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport useCreateQuote from 'data/hooks/mutations/createQuote';\nimport Button from 'components/atoms/Button';\nimport TextInput from 'components/atoms/Inputs/Text';\nimport PlacesInput from 'components/atoms/Inputs/Places';\nimport { H3 } from 'components/atoms/Typography';\n\nexport interface CreateQuoteButtonModalProps {}\n\nconst CreateQuoteButtonModal = () => {\n  const [quoteModalOpen, setQuoteModalOpen] = useState(false);\n  const [firstName, setFirstName] = useState('Jack');\n  const [lastName, setLastName] = useState('Sparrow');\n  const [address, setAddress] = useState('');\n  const [parsedAddress, setParsedAddress] = useState(null);\n\n  const closeModal = () => {\n    setQuoteModalOpen(false);\n  };\n\n  const onQuoteCreated = () => {\n    closeModal();\n  };\n  \n  const [createQuote, { loading }] = useCreateQuote(onQuoteCreated);\n\n  const handleCreateQuote = () => {\n    if (!parsedAddress) return;\n\n    const { line_1, line_2, city, region, postal } = parsedAddress;\n\n    createQuote({\n      variables: {\n        input: {\n          first_name: firstName,\n          last_name: lastName,\n          address: {\n            line_1,\n            line_2,\n            city,\n            region,\n            postal,\n          }\n        }\n      }\n    });\n  };\n\n\n  return (\n    <>\n      <Button onClick={() => setQuoteModalOpen(true)}>\n        Create a Quote\n      </Button>\n\n      <Modal\n        isOpen={quoteModalOpen}\n        onRequestClose={closeModal}\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n            overflow: 'visible',\n          }\n        }}\n      >\n        <H3 style={{ marginBottom: 20 }}>Create a Quote</H3>\n        <TextInput\n          label=\"First Name\"\n          onInputChange={(e, name) => setFirstName(name)}\n          value={firstName}\n        />\n        <TextInput\n          label=\"Last Name\"\n          onInputChange={(e, name) => setLastName(name)}\n          value={lastName}\n        />\n        <PlacesInput\n          onSelect={(parsedAddress, addressNormal) => {\n            setAddress(addressNormal);\n            setParsedAddress(parsedAddress);\n          }}\n          onChange={() => {\n            setParsedAddress(null)\n            setAddress('')\n          }}\n        />\n        <Button\n          onClick={handleCreateQuote}\n          disabled={loading || !firstName || !lastName || !address}\n          loading={loading}\n        >\n          Create\n        </Button>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateQuoteButtonModal;\n","import randomColor from 'randomcolor';\n\nimport s from './Avatar.module.css';\n\nexport interface AvatarProps {\n  firstName: string\n  lastName: string\n}\n\nconst Avatar = (props: AvatarProps) => {\n  const { firstName, lastName } = props;\n\n  const color = randomColor({\n    seed: firstName + lastName,\n    luminosity: 'dark',\n  });\n\n  const firstInitial = firstName[0];\n  const lastInitial = lastName[0];\n\n  return (\n    <div\n      className={s.avatar}\n      style={{ backgroundColor: color }}\n    >\n      { firstInitial }{ lastInitial }\n    </div>\n  );\n}\n\nexport default Avatar;\n","import { useNavigate } from \"react-router-dom\";\nimport Avatar from 'components/atoms/Avatar';\nimport Button from 'components/atoms/Button';\nimport CurrencyFormat from 'react-currency-format';\n\nimport s from './QuoteRow.module.css';\n\nexport interface QuoteRowProps {\n  quote: any,\n};\n\nconst QuoteRow = (props: QuoteRowProps) => {\n  const { quote } = props;\n  const navigate = useNavigate();\n\n  if (!quote) return null;\n\n  const { rating_address } = quote;\n\n  const address = Object.values(rating_address).join(' ');\n\n  return (\n    <tr className={s.quoteRow} key={quote.quoteId}>\n      <td className={s.shrink}>\n        <Avatar\n          firstName={quote.policy_holder.first_name}\n          lastName={quote.policy_holder.last_name}\n        />\n      </td>\n      <td className={s.shrink}>\n        {`${quote.policy_holder.first_name} ${quote.policy_holder.last_name}`}\n      </td>\n      <td>\n        { address }\n      </td>\n      <td>\n        <CurrencyFormat value={quote.premium} prefix=\"$\" displayType=\"text\" />\n      </td>\n      <td className={s.shrink}>\n        <Button onClick={() => navigate(`/quotes/${quote.quoteId}`)}>Edit Quote</Button>\n      </td>\n    </tr>\n  )\n};\n\nexport default QuoteRow;\n","import QuoteRow from './QuoteRow';\nimport { H5 } from 'components/atoms/Typography';\n\nimport s from './QuotesList.module.css';\n\nexport interface QuotesListProps {\n  quotes: [any]\n}\n\nconst QuotesList = (props: QuotesListProps) => {\n  const { quotes } = props;\n\n  if (!quotes) return null;\n\n  return (\n    <div className={s.quotesList}>\n      {!quotes.length && (<H5 style={{ margin: '55px 0'}}>No quotes created yet.</H5>)}\n      {quotes.length > 0 && (\n        <table className={s.quotesListTable}>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Name</th>\n              <th>Address</th>\n              <th>Premium</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {quotes.map((quote: any) => (\n              <QuoteRow quote={quote} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  )\n};\n\nexport default QuotesList;\n","import useQuotes from 'data/hooks/queries/quotes'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { H3 } from 'components/atoms/Typography';\n\nimport CreateQuoteButtonModal from './CreateQuoteButtonModal';\nimport QuotesList from './QuotesList';\n\nimport s from './RatingInformation.module.css';\n\nexport interface RatingInformationProps {}\n\nconst RatingInformation = (props: RatingInformationProps) => {\n  const quotes = useQuotes();\n\n  return (\n    <div>\n      <Grid>\n        <Row>\n          <Col xs={8}>\n            <H3>Active Quotes:</H3>\n          </Col>\n          <Col xs={4} className={s.createQuoteButton}>\n            <CreateQuoteButtonModal />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <QuotesList quotes={quotes} />\n          </Col>\n        </Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default RatingInformation;\n","import { gql } from '@apollo/client';\n\nimport QuoteFull from 'data/fragments/QuoteFull'; // eslint-disable-line\n\nconst QUOTE_QUERY = gql`\n  query Quote {\n    quote: QuoteFull\n  }\n`;\n\nexport default QUOTE_QUERY;\n","import useQuery from 'data/hooks/useQuery';\nimport QUOTES_QUERY from 'data/graphql/queries/quotes/Quote';\n\nconst useQuote = (quoteId?: string) => {\n  const { data, loading } = useQuery(QUOTES_QUERY, {\n    variables: { quoteId: quoteId }\n  });\n\n  if (loading) return null;\n  if (!data || !data.quote[0]) return null;\n\n  return data.quote[0];\n}\n\nexport default useQuote;","import Select from 'react-select';\nimport Label from \"components/atoms/Inputs/Label\";\n\nexport interface SelectInputProps {\n  options: any,\n  value: any,\n  label: string,\n}\n\nconst SelectInput = (props: SelectInputProps) => {\n  const { options, value, label } = props;\n\n  return (\n    <div>\n      { label && <Label text={label} /> }\n      <Select\n        options={options}\n        isSearchable={false}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default SelectInput;\n","import { useParams } from \"react-router-dom\";\nimport { Body, H2, H3, H5, H4, Small } from 'components/atoms/Typography';\nimport useQuote from \"data/hooks/queries/quote\";\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport Button from 'components/atoms/Button';\nimport SelectInput from \"components/atoms/Inputs/Select\";\nimport CurrencyFormat from 'react-currency-format';\n\nimport s from './QuoteOverview.module.css';\n\nexport interface QuoteOverviewProps {}\n\nconst QuoteOverview = (props: QuoteOverviewProps) => {\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const quote = useQuote(quoteId);\n\n  if (!quote) return <H4>Quote Not Found</H4>;\n  \n  const address = Object.values(quote.rating_address).join(' ');\n  const { first_name, last_name } = quote.policy_holder;\n  const { deductible, asteroid_collision } = quote.variable_selections;\n  const { variable_options } = quote;\n\n  const deductibleOptions = variable_options.deductible.values.map((value: string) => ({\n    value,\n    label: value,\n  }));\n  const activeDeductible = deductibleOptions.filter((option: any) => option.value === deductible);\n\n  const asteroidCollisionOptions = variable_options.asteroid_collision.values.map((value: string) => ({\n    value,\n    label: value,\n  }));\n  const activeCollision = asteroidCollisionOptions.filter((option: any) => option.value === asteroid_collision);\n\n  return (\n    <Grid>\n      <Row>\n        <Col xs={12}>\n          <H3 style={{ margin: '15px 0' }}>Quote {quoteId}</H3>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={6}>\n          <div className={s.dataBox}>\n            <H4>Active Policy Overview:</H4>\n\n            <H5 bold={false}>Policy Holder:</H5>\n            <Body>{`${first_name} ${last_name}`}</Body>\n\n            <H5 bold={false}>Address:</H5>\n            <Body>{ address }</Body>\n\n            <H5 bold={false}>Deductible:</H5>\n            <Body><CurrencyFormat value={deductible} prefix=\"$\" displayType=\"text\" /></Body>\n\n            <H5 bold={false}>Asteroid Collision:</H5>\n            <Body><CurrencyFormat value={asteroid_collision} prefix=\"$\" displayType=\"text\" /></Body>\n\n            <H5 bold={false}>Premium:</H5>\n            <Body><CurrencyFormat value={quote.premium} prefix=\"$\" displayType=\"text\" /></Body>\n          </div>\n        </Col>\n        <Col xs={6}>\n          <H3 style={{ margin: '0 0 15px' }}>Update policy:</H3>\n\n          <H4 style={{ margin: '15px 0', display: 'flex', alignItems: 'center' }}>\n            Premium: <H2 inline style={{ margin: '0 10px' }}><CurrencyFormat value={quote.premium} prefix=\"$\" displayType=\"text\" /></H2>\n          </H4>\n\n          <SelectInput\n            label=\"Deductible\"\n            options={deductibleOptions}\n            value={activeDeductible}\n          />\n          <Small style={{ margin: '3px 5px 20px' }}>\n            { variable_options.deductible.description }\n          </Small>\n\n          <SelectInput\n            label=\"Asteroid Collision\"\n            options={asteroidCollisionOptions}\n            value={activeCollision}\n          />\n          <Small style={{ margin: '3px 5px 20px' }}>\n            { variable_options.asteroid_collision.description }\n          </Small>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default QuoteOverview;\n","import { Navigate } from \"react-router-dom\";\nimport type { RouteObject } from \"react-router-dom\";\nimport { useRoutes } from \"react-router-dom\";\n\nimport Layout from 'App/Layout';\nimport Home from 'routes/Home';\nimport RatingInformation from 'routes/RatingInformation';\nimport QuoteOverview from 'routes/QuoteOverview';\n\nconst routes: RouteObject[] = [\n  {\n    path: '/home',\n    element: <Home />,\n  },\n  {\n    path: '/',\n    element: <Navigate to=\"/home\" />,\n  },\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      {\n        path: '/rating',\n        element: <RatingInformation />,\n      },\n      {\n        path: '/quotes/:quoteId',\n        element: <QuoteOverview />,\n      }\n    ]\n  }\n];\n\nexport { routes };\n\nconst RouterElement = () => {\n  const routesElement = useRoutes(routes);\n\n  return routesElement;\n};\n\nexport default RouterElement;\n","import { useEffect } from 'react';\nimport RouterElement from 'App/Router';\n\nimport s from './App.module.css';\n\nexport default function App() {\n  useEffect(() => {\n    const googleMapScript = document.createElement('script');\n    googleMapScript.src=`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_API_KEY}&libraries=places`;\n    googleMapScript.async = true;\n    window.document.body.appendChild(googleMapScript);\n  },[])\n\n  return (\n    <div className={s.app}>\n      <RouterElement />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloProvider from 'App/ApolloProvider';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ApolloProvider>\n        <App />\n      </ApolloProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Typography_body__8m-MI\",\"labelText\":\"Typography_labelText__epKSJ\",\"buttonText\":\"Typography_buttonText__mZteb\",\"small\":\"Typography_small__3wXte\",\"h1\":\"Typography_h1__1Jdui\",\"h2\":\"Typography_h2__3lGIL\",\"h3\":\"Typography_h3__2v2Di\",\"h4\":\"Typography_h4__Ejkuq\",\"h5\":\"Typography_h5__104qR\",\"bold\":\"Typography_bold__gPMvT\",\"uppercase\":\"Typography_uppercase__1ypBz\",\"inline\":\"Typography_inline__lz8WM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1EPUx\",\"primary\":\"Button_primary__10wIM\",\"secondary\":\"Button_secondary__1rwRo\",\"small\":\"Button_small__s7vt_\",\"disabled\":\"Button_disabled__21T4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placesWrapper\":\"Places_placesWrapper__1H-8n\",\"autocompleteDropdownContainer\":\"Places_autocompleteDropdownContainer__1wUcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteRow\":\"QuoteRow_quoteRow__1w1f5\",\"shrink\":\"QuoteRow_shrink__1y-P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Icon_icon__3Qhyv\",\"small\":\"Icon_small__3pSY_\",\"medium\":\"Icon_medium__2aom0\",\"large\":\"Icon_large__3zgZX\",\"spin\":\"Icon_spin__3eeWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__30E71\",\"logo\":\"Header_logo__WwD6M\",\"logoWrapper\":\"Header_logoWrapper__2kHjB\",\"logo-spin\":\"Header_logo-spin__2UfOK\"};"],"sourceRoot":""}