{"version":3,"sources":["components/atoms/Inputs/Base/InputBase.module.css","routes/RatingInformation/QuotesList/QuoteRow/QuoteRow.module.css","routes/RatingInformation/QuotesList/QuotesList.module.css","components/atoms/Avatar/Avatar.module.css","routes/RatingInformation/RatingInformation.module.css","App/App.module.css","App/ApolloProvider/index.tsx","App/StyleProvider/index.tsx","routes/Home/logo.svg","components/atoms/Typography/index.tsx","components/atoms/Icon/library.ts","components/atoms/Icon/index.tsx","components/atoms/Button/index.tsx","App/Layout/Header/index.tsx","App/Layout/index.tsx","routes/Home/index.tsx","data/hooks/useQuery.tsx","data/graphql/queries/quotes.ts","data/hooks/queries/quotes.tsx","data/hooks/useMutation.tsx","data/graphql/mutations/quotes/CreateQuote.ts","data/hooks/mutations/createQuote.tsx","components/atoms/Inputs/Label/index.tsx","components/atoms/Inputs/Base/index.tsx","components/atoms/Inputs/Text/index.tsx","routes/RatingInformation/CreateQuoteButtonModal/index.tsx","components/atoms/Avatar/index.tsx","routes/RatingInformation/QuotesList/QuoteRow/index.tsx","routes/RatingInformation/QuotesList/index.tsx","routes/RatingInformation/index.tsx","App/Router/index.tsx","App/index.tsx","reportWebVitals.ts","index.tsx","components/atoms/Button/Button.module.css","components/atoms/Typography/Typography.module.css","components/atoms/Icon/Icon.module.css","App/Layout/Header/Header.module.css","routes/Home/Home.module.css"],"names":["module","exports","typeDefs","gql","restLink","RestLink","uri","responseTransformer","response","a","json","then","data","quote","client","ApolloClient","link","cache","InMemoryCache","connectToDevTools","ApolloProviderWrapper","props","children","ApolloProvider","StyleProvider","BaseText","Element","bold","uppercase","textType","style","className","classnames","s","LabelText","otherProps","ButtonText","H1","H3","H4","H5","AddedIcons","Object","entries","fas","fab","Icons","forEach","entry","push","library","add","Icon","name","size","spin","icon","Button","onClick","buttonType","disabled","loading","type","button","Header","navigate","useNavigate","header","logoWrapper","src","logo","alt","Layout","Home","home","margin","appLogo","useQuery","query","options","onCompleted","onError","otherOptions","useApolloQuery","e","fetchPolicy","QUOTES_QUERY","useCreateQuote","quotes","useMutation","mutation","useApolloMutation","CREATE_QUOTE","createQuote","update","cachedData","readQuery","writeQuery","InputLabel","text","InputBase","value","onChange","label","inputWrapper","input","currentTarget","TextInput","CreateQuoteButtonModal","useState","quoteModalOpen","setQuoteModalOpen","firstName","setFirstName","lastName","setLastName","closeModal","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","marginBottom","Text","variables","first_name","last_name","address","line_1","line_2","city","region","postal","Avatar","color","randomColor","seed","luminosity","firstInitial","lastInitial","avatar","backgroundColor","QuoteRow","quoteRow","shrink","policy_holder","quoteId","QuotesList","length","quotesList","quotesListTable","map","RatingInformation","useQuotes","xs","createQuoteButton","routes","path","element","to","RouterElement","useRoutes","App","app","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,aAAe,gCAAgC,MAAQ,2B,oBCAzED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,oBCAjED,EAAOC,QAAU,CAAC,gBAAkB,sC,oBCApCD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,kBAAoB,+C,oBCAtCD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,IAAM,mB,yPCO3CC,EAAWC,YAAH,20BA8CRC,EAAW,IAAIC,WAAS,CAC5BC,IAAK,+CACLC,oBAAoB,WAAD,4BAAE,WAAMC,GAAN,SAAAC,EAAA,+EAAkBD,EAASE,OAAOC,MAAK,SAACC,GAAD,OAAeA,EAAKC,UAA3D,2CAAF,mDAAC,KAGhBC,EAAS,IAAIC,IAAa,CAC9BC,KAAMZ,EACNa,MAAO,IAAIC,IACXC,mBAAmB,EACnBjB,aAiBakB,EAVe,SAACC,GAC7B,IAAQC,EAAaD,EAAbC,SAER,OACE,cAACC,EAAA,EAAD,CAAgBT,OAAQA,EAAxB,SACIQ,K,eC9DOE,G,cANO,SAACH,GACrB,IAAQC,EAAaD,EAAbC,SAER,OAAQ,mCAAIA,MCVC,MAA0B,iC,oJCanCG,EAAW,SAACJ,GAA0B,IAAD,EACzC,EAA+EA,EAAvEK,eAAR,MAAkB,IAAlB,EAAuBJ,EAAwDD,EAAxDC,SAAUK,EAA8CN,EAA9CM,KAAMC,EAAwCP,EAAxCO,UAAvC,EAA+EP,EAA7BQ,gBAAlD,MAA6D,OAA7D,EAAqEC,EAAUT,EAAVS,MAErE,OACE,cAACJ,EAAD,CACEK,UAAWC,IAAW,CAACC,IAAEJ,KAAJ,mBAAmBI,IAAEN,KAAOA,GAA5B,cAAmCM,IAAEL,UAAYA,GAAjD,IACrBE,MAAOA,EAFT,SAIIR,KAmBFY,EAAY,SAACb,GACjB,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,KAAQS,GAA1B,IAAsCN,SAAS,YAA/C,SACIP,MAmBFc,EAAa,SAACf,GAClB,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,KAAQS,GAA1B,IAAsCN,SAAS,aAAaF,MAAI,EAAhE,SACIL,MAOFe,EAAK,SAAChB,GACV,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,MAASS,GAA3B,IAAuCN,SAAS,KAAKF,MAAI,EAAzD,SACIL,MAmBFgB,EAAK,SAACjB,GACV,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,MAASS,GAA3B,IAAuCN,SAAS,KAAKF,MAAI,EAAzD,SACIL,MAOFiB,EAAK,SAAClB,GACV,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,MAASS,GAA3B,IAAuCN,SAAS,KAAKF,MAAI,EAAzD,SACIL,MAOFkB,EAAK,SAACnB,GACV,IAAQC,EAA4BD,EAA5BC,SAAaa,EAArB,YAAoCd,EAApC,GAEA,OACE,cAAC,EAAD,yBAAUK,QAAQ,MAASS,GAA3B,IAAuCN,SAAS,KAAKF,MAAI,EAAzD,SACIL,M,0DC7HFmB,EAAe,sBAChBC,OAAOC,QAAQC,MADC,YAEhBF,OAAOC,QAAQE,OAGdC,GAAa,GAEnBL,EAAWM,SAAQ,SAACC,GAClBF,GAAMG,KAAKD,EAAM,OAGnBE,IAAQC,IAAIP,IAAKC,KAEFC,I,0BCSAM,GAdF,SAAC/B,GACZ,MAIIA,EAHFgC,YADF,MACS,eADT,IAIIhC,EAFFiC,YAFF,MAES,SAFT,EAGEC,EACElC,EADFkC,KAGF,OACE,qBAAKxB,UAAWC,IAAWC,KAAEuB,KAAMvB,KAAEqB,GAAX,eAAqBrB,KAAEsB,KAAOA,IAAxD,SACE,cAAC,IAAD,CAAiBC,KAAMH,OCgBdI,GAtBA,SAACpC,GACd,IACEC,EAMED,EANFC,SACAoC,EAKErC,EALFqC,QAFF,EAOIrC,EAJFsC,kBAHF,MAGe,UAHf,IAOItC,EAHFiC,YAJF,MAIS,SAJT,EAKEM,EAEEvC,EAFFuC,SACAC,EACExC,EADFwC,QAGF,OACE,wBACEH,QAASA,EACTI,KAAK,SACL/B,UAAWC,IAAWC,IAAE8B,OAAQ9B,IAAE0B,GAAa1B,IAAEqB,GAA5B,eAAsCrB,IAAE2B,SAAWA,IACxEA,SAAUA,EAJZ,SAME,cAAC,EAAD,UAAcC,EAAqB,cAAC,GAAD,CAAMR,KAAK,UAAUC,KAAK,QAAQC,MAAI,IAAjDjC,O,oBCPf0C,GAhBA,SAAC3C,GACd,IAAM4C,EAAWC,cAEjB,OACE,sBAAKnC,UAAWE,KAAEkC,OAAlB,UACE,sBAAKpC,UAAWE,KAAEmC,YAAaV,QAAS,kBAAMO,EAAS,UAAvD,UACE,qBAAKI,IAAKC,EAAMvC,UAAWE,KAAEqC,KAAMC,IAAI,SACvC,cAAC,EAAD,kCAEF,8BACE,cAAC,GAAD,CAAQb,QAAS,kBAAMO,EAAS,YAAYX,KAAK,QAAjD,sC,SCEOkB,GAdA,SAACnD,GAAD,OACb,eAAC,EAAD,WACE,cAAC,GAAD,IAEA,cAAC,QAAD,UACE,cAAC,OAAD,UACE,cAAC,OAAD,UACE,cAAC,IAAD,c,oBCSKoD,GAbF,SAACpD,GACZ,IAAM4C,EAAWC,cAEjB,OACE,sBAAKnC,UAAWE,KAAEyC,KAAlB,UACE,cAAC,EAAD,CAAI5C,MAAO,CAAE6C,OAAQ,UAArB,8BACA,qBAAKN,IAAKC,EAAMvC,UAAWE,KAAE2C,QAASL,IAAI,SAC1C,cAAC,EAAD,CAAIzC,MAAO,CAAE6C,OAAQ,UAArB,oDACA,cAAC,GAAD,CAAQjB,QAAS,kBAAMO,EAAS,YAAhC,4B,uCCFSY,GAbE,SAACC,EAAqBC,GACrC,MAAwEA,EAAhEC,mBAAR,MAAsB,aAAtB,IAAwED,EAAxCE,eAAhC,MAA0C,aAA1C,EAAuDC,EAAvD,YAAwEH,EAAxE,IASA,OAPaI,aAAeL,EAAD,YAAC,aAC1BG,QAAS,SAACG,GAAD,OAAOH,EAAQG,IACxBJ,YAAa,SAACpE,GAAD,OAAUoE,EAAY,CAAEpE,WAClCsE,GAHsB,IAIzBG,YAAa,iBCAFC,GANMnF,YAAH,4ECQHoF,GATQ,WACrB,MAA0BV,GAASS,GAAc,IAAzC1E,EAAR,EAAQA,KAER,OAFA,EAAciD,QAEM,KACfjD,GAASA,EAAK4E,QAEZ5E,EAAK4E,QAFsB,I,qECQrBC,GAZK,SAACC,EAAwBX,GAC3C,MAAwEA,EAAhEC,mBAAR,MAAsB,aAAtB,IAAwED,EAAxCE,eAAhC,MAA0C,aAA1C,EAAuDC,EAAvD,YAAwEH,EAAxE,IAQA,OANeY,aAAkBD,EAAD,aAC9BT,QAAS,SAACG,GAAD,OAAOH,EAAQG,IACxBJ,YAAa,SAACpE,GAAD,OAAUoE,EAAY,CAAEpE,WAClCsE,KCsDQU,GA3DMzF,YAAH,w+BCsBHoF,GAtBQ,WAA6B,IAA5BP,EAA2B,uDAAb,aAC9Ba,EAAcJ,GAAYG,GAAc,CAC5CE,OAD4C,SACrC7E,EADqC,GACnB,IAATL,EAAQ,EAARA,KACd,GAAKA,GAASA,EAAKiF,YAAnB,CAEA,IAAMhF,EAAQD,EAAKiF,YAEbE,EAAa9E,EAAM+E,UAAe,CACtClB,MAAOQ,MACH,CAAEE,OAAQ,IAEhBvE,EAAMgF,WAAW,CACfnB,MAAOQ,GACP1E,KAAM,CAAE4E,OAAO,GAAD,mBAAMO,EAAWP,QAAjB,CAAyB3E,SAG3CmE,gBAGF,OAAOa,GCTMK,GARI,SAAC7E,GAClB,IAAQ8E,EAAS9E,EAAT8E,KAER,OACE,gCAAO,cAAC,EAAD,UAAaA,O,qBCuBTC,GArBG,SAAC/E,GACjB,IAAQgF,EAA2ChF,EAA3CgF,MAAOC,EAAoCjF,EAApCiF,SAAUxC,EAA0BzC,EAA1ByC,KAAMF,EAAoBvC,EAApBuC,SAAU2C,EAAUlF,EAAVkF,MAMzC,OACE,sBAAKxE,UAAWE,KAAEuE,aAAlB,UACGD,GAAU,cAAC,GAAD,CAAYJ,KAAMI,IAC7B,uBACExE,UAAWC,IAAWC,KAAEwE,OACxBJ,MAAOA,EACPC,SAVe,SAAClB,GACpBkB,EAASlB,EAAGA,EAAEsB,cAAcL,QAUxBvC,KAAMA,EACNF,SAAUA,QCjBH+C,GANG,SAACtF,GACjB,OACE,cAAC,GAAD,eAAeA,KCgFJuF,GA7EgB,WAC7B,MAA4CC,oBAAS,GAArD,oBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAkCF,mBAAS,QAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,WAAzC,oBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,WACjBL,GAAkB,IAOpB,EAAmCxB,IAJZ,WACrB6B,OAGF,oBAAOvB,EAAP,KAAsBhC,EAAtB,KAAsBA,QAqBtB,OACE,qCACE,cAAC,GAAD,CAAQH,QAAS,kBAAMqD,GAAkB,IAAzC,4BAIA,eAAC,KAAD,CACEM,OAAQP,EACRQ,eAAgBF,EAChBtF,MAAO,CACLyF,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAVjB,UAcE,cAAC,EAAD,CAAI/F,MAAO,CAAEgG,aAAc,IAA3B,4BACA,cAACC,GAAD,CACExB,MAAM,aACND,SAAU,SAAClB,EAAG/B,GAAJ,OAAa4D,EAAa5D,IACpCgD,MAAOW,IAET,cAACe,GAAD,CACExB,MAAM,YACND,SAAU,SAAClB,EAAG/B,GAAJ,OAAa8D,EAAY9D,IACnCgD,MAAOa,IAET,cAAC,GAAD,CACExD,QAnDkB,WACxBmC,EAAY,CACVmC,UAAW,CACTvB,MAAO,CACLwB,WAAYjB,EACZkB,UAAWhB,EACXiB,QAAS,CACPC,OAAQ,oBACRC,OAAQ,KACRC,KAAM,WACNC,OAAQ,KACRC,OAAQ,cAyCV5E,SAAUC,IAAYmD,IAAcE,EACpCrD,QAASA,EAHX,2B,0CC5CO4E,GArBA,SAACpH,GACd,IAAQ2F,EAAwB3F,EAAxB2F,UAAWE,EAAa7F,EAAb6F,SAEbwB,EAAQC,KAAY,CACxBC,KAAM5B,EAAYE,EAClB2B,WAAY,SAGRC,EAAe9B,EAAU,GACzB+B,EAAc7B,EAAS,GAE7B,OACE,sBACEnF,UAAWE,KAAE+G,OACblH,MAAO,CAAEmH,gBAAiBP,GAF5B,UAIII,EAAgBC,M,qBCETG,GApBE,SAAC7H,GAChB,IAAQR,EAAUQ,EAAVR,MAER,OAAKA,EAGH,qBAAIkB,UAAWE,KAAEkH,SAAjB,UACE,oBAAIpH,UAAWE,KAAEmH,OAAjB,SACE,cAAC,GAAD,CACEpC,UAAWnG,EAAMwI,cAAcpB,WAC/Bf,SAAUrG,EAAMwI,cAAcnB,cAGlC,6BACGrH,EAAMyI,YARqBzI,EAAMyI,SAHrB,M,qBCsBNC,GAxBI,SAAClI,GAClB,IAAQmE,EAAWnE,EAAXmE,OAER,OAAKA,GAAWA,EAAOgE,OAGrB,qBAAKzH,UAAWE,KAAEwH,WAAlB,SACE,wBAAO1H,UAAWE,KAAEyH,gBAApB,UACE,gCACE,+BACE,uBACA,2CAGJ,gCACGlE,GAAUA,EAAOmE,KAAI,SAAC9I,GAAD,OACpB,cAAC,GAAD,CAAUA,MAAOA,cAbW,M,qBC4BzB+I,GA3BW,SAACvI,GAEzB,IAAMmE,EAASqE,KAEf,OACE,8BACE,eAAC,QAAD,WACE,eAAC,OAAD,WACE,cAAC,OAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,+BAIF,cAAC,OAAD,CAAKA,GAAI,EAAG/H,UAAWE,KAAE8H,kBAAzB,SACE,cAAC,GAAD,SAGJ,cAAC,OAAD,UACE,cAAC,OAAD,CAAKD,GAAI,GAAT,SACE,cAAC,GAAD,CAAYtE,OAAQA,cCvB1BwE,GAAwB,CAC5B,CACEC,KAAM,QACNC,QAAS,cAAC,GAAD,KAEX,CACED,KAAM,IACNC,QAAS,cAAC,IAAD,CAAUC,GAAG,WAExB,CACEF,KAAM,IACNC,QAAS,cAAC,GAAD,IACT5I,SAAU,CACR,CACE2I,KAAM,UACNC,QAAS,cAAC,GAAD,QAcFE,GANO,WAGpB,OAFsBC,YAAUL,K,qBC5BnB,SAASM,KACtB,OACE,qBAAKvI,UAAWE,KAAEsI,IAAlB,SACE,cAACC,GAAD,MCLN,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhK,MAAK,YAAkD,IAA/CiK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAACb,GAAD,UAINc,SAASC,eAAe,SAM1BZ,M,mBCtBAzK,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,UAAY,0BAA0B,MAAQ,sBAAsB,SAAW,2B,mBCAnKD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,UAAY,8BAA8B,WAAa,+BAA+B,MAAQ,0BAA0B,GAAK,uBAAuB,GAAK,uBAAuB,GAAK,uBAAuB,GAAK,uBAAuB,GAAK,uBAAuB,KAAO,yBAAyB,UAAY,gC,mBCAlWD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,qBAAqB,MAAQ,oBAAoB,KAAO,qB,mBCAzID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,YAAc,8B,mBCA5FD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,gBAAgB,+B","file":"static/js/main.dec4ed01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputBase_inputWrapper__gwWFH\",\"input\":\"InputBase_input__1vIYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quoteRow\":\"QuoteRow_quoteRow__1w1f5\",\"shrink\":\"QuoteRow_shrink__1y-P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotesListTable\":\"QuotesList_quotesListTable__n-jTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__328LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createQuoteButton\":\"RatingInformation_createQuoteButton__1hgre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__28qQO\",\"app\":\"App_app__13Yue\"};","import {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\nimport { gql } from '@apollo/client';\nimport { RestLink } from 'apollo-link-rest';\n\nconst typeDefs = gql`\n  type Quote {\n    quoteId: ID\n    rating_address: RatingAddress\n    policy_holder: PolicyHolder\n    variable_options: VariableOptions\n    variable_selections: VariableSelections\n    premium: Integer\n  }\n\n  type RatingAddress {\n    line_1: String\n    line_2: String\n    city: String\n    region: String\n    postal: String\n  }\n  \n  type PolicyHolder {\n    first_name: String\n    last_name: String\n  }\n\n  type VariableOptions {\n    deductible: Deductible\n    asteroid_collision: AsteroidCollision\n  }\n\n  type Deductible {\n    title: String\n    description: String\n    values: [Integer]\n  }\n\n  type AsteroidCollision {\n    title: String\n    description: String\n    values: [Integer]\n  }\n\n  type VariableSelections {\n    deductible: Integer\n    asteroid_collision: Integer\n  }\n`;\n\nconst restLink = new RestLink({\n  uri: 'https://fed-challenge-api.sure.now.sh/api/v1',\n  responseTransformer: async response => response.json().then((data: any) => data.quote),\n});\n\nconst client = new ApolloClient({\n  link: restLink,\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n  typeDefs,\n});\n\nexport interface ApolloProviderProps {\n  children: React.ReactNode,\n}\n\nconst ApolloProviderWrapper = (props: ApolloProviderProps) => {\n  const { children } = props;\n\n  return (\n    <ApolloProvider client={client}>\n      { children }\n    </ApolloProvider>\n  );\n};\n\nexport default ApolloProviderWrapper;\n","import './variables.css';\nimport './fonts.css';\n\nexport interface StyleProviderProps {\n  children: React.ReactNode,\n}\n\nconst StyleProvider = (props: StyleProviderProps) => {\n  const { children } = props;\n\n  return (<>{ children }</>);\n};\n\nexport default StyleProvider;\n","export default __webpack_public_path__ + \"static/media/logo.838f9047.svg\";","import classnames from 'classnames';\n\nimport s from './Typography.module.css';\n\nexport interface BaseTextProps {\n  Element?: 'p' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5'\n  textType?: 'small' | 'labelText' | 'body' | 'buttonText' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5'\n  children: React.ReactNode\n  bold?: boolean\n  uppercase?: boolean\n  style?: any\n}\n\nconst BaseText = (props: BaseTextProps) => {\n  const { Element = 'p', children, bold, uppercase, textType = 'body', style } = props;\n\n  return (\n    <Element\n      className={classnames([s[textType]], { [s.bold]: bold, [s.uppercase]: uppercase })}\n      style={style}\n    >\n      { children }\n    </Element>\n  );\n}\n\nexport default BaseText;\n\nconst Body = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='p' {...otherProps} textType=\"body\">\n      { children }\n    </BaseText>\n  );\n};\n\nexport { Body };\n\nconst LabelText = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='p' {...otherProps} textType=\"labelText\">\n      { children }\n    </BaseText>\n  );\n};\n\nexport { LabelText };\n\nconst Small = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='p' {...otherProps} textType=\"small\">\n      { children }\n    </BaseText>\n  );\n};\n\nexport { Small };\n\nconst ButtonText = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='p' {...otherProps} textType=\"buttonText\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { ButtonText };\n\nconst H1 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n  \n  return (\n    <BaseText Element='h1' {...otherProps} textType=\"h1\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H1 };\n\nconst H2 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h2' {...otherProps} textType=\"h2\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H2 };\n\nconst H3 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h3' {...otherProps} textType=\"h3\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H3 };\n\nconst H4 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h4' {...otherProps} textType=\"h4\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H4 };\n\nconst H5 = (props: BaseTextProps) => {\n  const { children, ...otherProps } = props;\n\n  return (\n    <BaseText Element='h5' {...otherProps} textType=\"h5\" bold>\n      { children }\n    </BaseText>\n  );\n};\n\nexport { H5 };","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nconst AddedIcons: any = [\n  ...Object.entries(fas),\n  ...Object.entries(fab),\n];\n\nconst Icons: any = [];\n\nAddedIcons.forEach((entry: any) => {\n  Icons.push(entry[1]);\n});\n\nlibrary.add(fas, fab);\n\nexport default Icons;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport './library';\nimport Icons from './icons';\nimport s from './Icon.module.css';\n\nexport interface IconProps {\n  name: typeof Icons[number],\n  size: 'small' | 'medium' | 'large',\n  spin?: boolean,\n}\n\nconst Icon = (props: IconProps) => {\n  const {\n    name = 'check-square',\n    size = 'medium',\n    spin,\n  } = props;\n\n  return (\n    <div className={classnames(s.icon, s[size], { [s.spin]: spin })}>\n      <FontAwesomeIcon icon={name} />\n    </div>\n  );\n};\n\nexport default Icon;\n","import s from './Button.module.css';\nimport Icon from 'components/atoms/Icon';\nimport classnames from 'classnames';\n\nimport { ButtonText } from 'components/atoms/Typography';\n\nexport interface ButtonProps {\n  onClick(): void,\n  children: React.ReactNode,\n  buttonType?: 'primary' | 'secondary',\n  size?: 'small' | 'medium',\n  disabled?: boolean,\n  loading?: boolean,\n}\n\nconst Button = (props: ButtonProps) => {\n  const {\n    children,\n    onClick,\n    buttonType = 'primary',\n    size = 'medium',\n    disabled,\n    loading,\n  } = props;\n\n  return (\n    <button\n      onClick={onClick}\n      type=\"button\"\n      className={classnames(s.button, s[buttonType], s[size], { [s.disabled]: disabled })}\n      disabled={disabled}\n    >\n      <ButtonText>{!loading ? children : <Icon name=\"spinner\" size=\"small\" spin /> }</ButtonText>\n    </button>\n  );\n}\n\nexport default Button;","import logo from 'routes/Home/logo.svg';\nimport { H5 } from 'components/atoms/Typography';\nimport Button from 'components/atoms/Button';\nimport { useNavigate } from \"react-router-dom\";\n\nimport s from './Header.module.css';\n\nexport interface HeaderProps {};\n\nconst Header = (props: HeaderProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className={s.header}>\n      <div className={s.logoWrapper} onClick={() => navigate('/home')}>\n        <img src={logo} className={s.logo} alt=\"logo\" />\n        <H5>Rocket Insurance</H5>\n      </div>\n      <div>\n        <Button onClick={() => navigate('/rating')} size=\"small\">Rating Information</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Outlet } from \"react-router-dom\";\nimport StyleProvider from 'App/StyleProvider';\nimport Header from './Header';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nexport interface LayoutProps {}\n\nconst Layout = (props: LayoutProps) => (\n  <StyleProvider>\n    <Header />\n\n    <Grid>\n      <Row>\n        <Col>\n          <Outlet />\n        </Col>\n      </Row>\n    </Grid>\n  </StyleProvider>\n);\n\nexport default Layout;\n","import { useNavigate } from \"react-router-dom\";\nimport Button from 'components/atoms/Button';\nimport { H1, H4 } from 'components/atoms/Typography';\n\nimport logo from './logo.svg';\n\nimport s from './Home.module.css';\n\nexport interface HomeProps {}\n\nconst Home = (props: HomeProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <div className={s.home}>\n      <H1 style={{ margin: '15px 0' }}>Rocket Insurance</H1>\n      <img src={logo} className={s.appLogo} alt=\"logo\" />\n      <H4 style={{ margin: '15px 0' }}>Sometimes Newton happens. Sign up now!</H4>\n      <Button onClick={() => navigate('/rating')}>BLAST OFF!</Button>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useQuery as useApolloQuery, QueryHookOptions } from \"@apollo/react-hooks\";\nimport { DocumentNode } from 'graphql';\n\nconst useQuery = (query: DocumentNode, options: QueryHookOptions) => {\n  const { onCompleted = () => {}, onError = () => {}, ...otherOptions } = options;\n\n  const data = useApolloQuery(query, {\n    onError: (e) => onError(e),\n    onCompleted: (data) => onCompleted({ data }),\n    ...otherOptions,\n    fetchPolicy: 'cache-only',\n  });\n\n  return data;\n};\n\nexport default useQuery;\n","import { gql } from '@apollo/client';\n\nimport QuoteFull from 'data/fragments/QuoteFull'; // eslint-disable-line\n\nconst QUOTES_QUERY = gql`\n  query Quotes {\n    quotes: QuoteFull\n  }\n`;\n\nexport default QUOTES_QUERY;\n","import useQuery from 'data/hooks/useQuery';\nimport QUOTES_QUERY from 'data/graphql/queries/quotes';\n\nconst useCreateQuote = () => {\n  const { data, loading } = useQuery(QUOTES_QUERY, {});\n\n  if (loading) return null;\n  if (!data || !data.quotes) return [];\n\n  return data.quotes || [];\n}\n\nexport default useCreateQuote;","import { useMutation as useApolloMutation, MutationHookOptions } from \"@apollo/react-hooks\";\nimport { DocumentNode } from 'graphql';\n\nconst useMutation = (mutation: DocumentNode, options: MutationHookOptions) => {\n  const { onCompleted = () => {}, onError = () => {}, ...otherOptions } = options;\n\n  const mutate = useApolloMutation(mutation, {\n    onError: (e) => onError(e),\n    onCompleted: (data) => onCompleted({ data }),\n    ...otherOptions,\n  });\n\n  return mutate;\n};\n\nexport default useMutation;\n","import { gql } from '@apollo/client';\n\nimport QuoteFull from 'data/fragments/QuoteFull'; // eslint-disable-line\n\nconst CREATE_QUOTE = gql`\n  fragment QuoteInput on REST {\n    ...PolicyHolder\n    address {\n      ...Address\n    }\n  }\n\n  fragment Address on any { \n    line_1\n    line_2\n    city\n    region\n    postal\n  }\n\n  fragment PolicyHolder on any {\n    last_name\n    first_name\n  }\n\n  fragment VariableOptions on Quote {\n    deductible {\n      title\n      description\n      values\n    }\n    asteroid_collision {\n      title\n      description\n      values\n    }\n  }\n\n  fragment VariableSelections on Quote {\n    deductible\n    asteroid_collision\n  }\n\n  fragment QuoteParts on Quote {\n    quoteId\n    policy_holder: PolicyHolder\n    rating_address: Address\n    variable_options: VariableOptions\n    variable_selections: VariableSelections\n    premium\n  }\n\n  mutation CreateQuote($input: QuoteInput!) {\n    createQuote(input: $input) @rest(\n        method: \"POST\",\n        type: \"Quote\",\n        path: \"/quotes\"\n      ) {\n      ...QuoteParts\n    }\n  }\n`;\n\nexport default CREATE_QUOTE;\n","import useMutation from 'data/hooks/useMutation';\nimport CREATE_QUOTE from 'data/graphql/mutations/quotes/CreateQuote';\nimport QUOTES_QUERY from 'data/graphql/queries/quotes';\n\nconst useCreateQuote = (onCompleted = () => {}) => {\n  const createQuote = useMutation(CREATE_QUOTE, {\n    update(cache, { data }) {\n      if (!data || !data.createQuote) return;\n\n      const quote = data.createQuote;\n\n      const cachedData = cache.readQuery<any>({\n        query: QUOTES_QUERY,\n      }) || { quotes: [] };\n\n      cache.writeQuery({\n        query: QUOTES_QUERY,\n        data: { quotes: [...cachedData.quotes, quote] },\n      });\n    },\n    onCompleted,\n  });\n\n  return createQuote;\n}\n\nexport default useCreateQuote;","import { LabelText } from 'components/atoms/Typography';\n\nexport interface InputLabelProps {\n  text: string\n}\n\nconst InputLabel = (props: InputLabelProps) => {\n  const { text } = props;\n\n  return (\n    <label><LabelText>{ text }</LabelText></label>\n  );\n};\n\nexport default InputLabel;\n","import InputLabel from 'components/atoms/Inputs/Label';\nimport s from './InputBase.module.css';\nimport classnames from 'classnames';\n\nexport interface InputBaseProps {\n  value: string | number,\n  type?: string,\n  onChange(e: React.FormEvent<HTMLInputElement>, val: string): void,\n  disabled?: boolean,\n  label?: string,\n}\n\nconst InputBase = (props: InputBaseProps) => {\n  const { value, onChange, type, disabled, label } = props;\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    onChange(e, e.currentTarget.value);\n  };\n\n  return (\n    <div className={s.inputWrapper}>\n      {label && (<InputLabel text={label} />)}\n      <input\n        className={classnames(s.input)}\n        value={value}\n        onChange={handleChange}\n        type={type}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default InputBase;\n","import InputBase, { InputBaseProps } from \"components/atoms/Inputs/Base\";\n\nexport interface TextInputProps extends InputBaseProps {}\n\nconst TextInput = (props: TextInputProps) => {\n  return (\n    <InputBase {...props} />\n  )\n};\n\nexport default TextInput;\n","import { useState } from 'react';\nimport Modal from 'react-modal';\nimport useCreateQuote from 'data/hooks/mutations/createQuote';\nimport Button from 'components/atoms/Button';\nimport TextInput from 'components/atoms/Inputs/Text';\nimport { H3 } from 'components/atoms/Typography';\n\nexport interface CreateQuoteButtonModalProps {}\n\nconst CreateQuoteButtonModal = () => {\n  const [quoteModalOpen, setQuoteModalOpen] = useState(false);\n  const [firstName, setFirstName] = useState('Jack');\n  const [lastName, setLastName] = useState('Sparrow');\n\n  const closeModal = () => {\n    setQuoteModalOpen(false);\n  };\n\n  const onQuoteCreated = () => {\n    closeModal();\n  };\n  \n  const [createQuote, { loading }] = useCreateQuote(onQuoteCreated);\n\n  const handleCreateQuote = () => {\n    createQuote({\n      variables: {\n        input: {\n          first_name: firstName,\n          last_name: lastName,\n          address: {\n            line_1: \"123 Mulberry Lane\",\n            line_2: \"3B\",\n            city: \"Brooklyn\",\n            region: \"NY\",\n            postal: \"11211\"\n          }\n        }\n      }\n    });\n  };\n\n\n  return (\n    <>\n      <Button onClick={() => setQuoteModalOpen(true)}>\n        Create a Quote\n      </Button>\n\n      <Modal\n        isOpen={quoteModalOpen}\n        onRequestClose={closeModal}\n        style={{\n          content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n          }\n        }}\n      >\n        <H3 style={{ marginBottom: 20 }}>Create a Quote</H3>\n        <TextInput\n          label=\"First Name\"\n          onChange={(e, name) => setFirstName(name)}\n          value={firstName}\n        />\n        <TextInput\n          label=\"Last Name\"\n          onChange={(e, name) => setLastName(name)}\n          value={lastName}\n        />\n        <Button\n          onClick={handleCreateQuote}\n          disabled={loading || !firstName || !lastName}\n          loading={loading}\n        >\n          Create\n        </Button>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateQuoteButtonModal;\n","import randomColor from 'randomcolor';\n\nimport s from './Avatar.module.css';\n\nexport interface AvatarProps {\n  firstName: string\n  lastName: string\n}\n\nconst Avatar = (props: AvatarProps) => {\n  const { firstName, lastName } = props;\n\n  const color = randomColor({\n    seed: firstName + lastName,\n    luminosity: 'dark',\n  });\n\n  const firstInitial = firstName[0];\n  const lastInitial = lastName[0];\n\n  return (\n    <div\n      className={s.avatar}\n      style={{ backgroundColor: color }}\n    >\n      { firstInitial }{ lastInitial }\n    </div>\n  );\n}\n\nexport default Avatar;\n","import Avatar from 'components/atoms/Avatar';\nimport s from './QuoteRow.module.css';\n\nexport interface QuoteRowProps {\n  quote: any,\n};\n\nconst QuoteRow = (props: QuoteRowProps) => {\n  const { quote } = props;\n\n  if (!quote) return null;\n\n  return (\n    <tr className={s.quoteRow} key={quote.quoteId}>\n      <td className={s.shrink}>\n        <Avatar\n          firstName={quote.policy_holder.first_name}\n          lastName={quote.policy_holder.last_name}\n        />\n      </td>\n      <td>\n        {quote.quoteId}\n      </td>\n    </tr>\n  )\n};\n\nexport default QuoteRow;\n","import QuoteRow from './QuoteRow';\n\nimport s from './QuotesList.module.css';\n\nexport interface QuotesListProps {\n  quotes: [any]\n}\n\nconst QuotesList = (props: QuotesListProps) => {\n  const { quotes } = props;\n\n  if (!quotes || !quotes.length) return null;\n\n  return (\n    <div className={s.quotesList}>\n      <table className={s.quotesListTable}>\n        <thead>\n          <tr>\n            <th></th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {quotes && quotes.map((quote: any) => (\n            <QuoteRow quote={quote} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n};\n\nexport default QuotesList;\n","import Button from 'components/atoms/Button';\nimport useQuotes from 'data/hooks/queries/quotes'\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { H3 } from 'components/atoms/Typography';\n\nimport CreateQuoteButtonModal from './CreateQuoteButtonModal';\nimport QuotesList from './QuotesList';\n\nimport s from './RatingInformation.module.css';\n\nexport interface RatingInformationProps {}\n\nconst RatingInformation = (props: RatingInformationProps) => {\n\n  const quotes = useQuotes();\n\n  return (\n    <div>\n      <Grid>\n        <Row>\n          <Col xs={8}>\n            <H3>\n              Active Quotes: \n            </H3>\n          </Col>\n          <Col xs={4} className={s.createQuoteButton}>\n            <CreateQuoteButtonModal />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <QuotesList quotes={quotes} />\n          </Col>\n        </Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default RatingInformation;\n","import { Navigate } from \"react-router-dom\";\nimport type { RouteObject } from \"react-router-dom\";\nimport { useRoutes /*, useParams*/ } from \"react-router-dom\";\n\nimport Layout from 'App/Layout';\nimport Home from 'routes/Home';\nimport RatingInformation from 'routes/RatingInformation';\n\nconst routes: RouteObject[] = [\n  {\n    path: '/home',\n    element: <Home />,\n  },\n  {\n    path: '/',\n    element: <Navigate to=\"/home\" />,\n  },\n  {\n    path: '/',\n    element: <Layout />,\n    children: [\n      {\n        path: '/rating',\n        element: <RatingInformation />,\n      },\n    ]\n  }\n];\n\nexport { routes };\n\nconst RouterElement = () => {\n  const routesElement = useRoutes(routes);\n\n  return routesElement;\n};\n\nexport default RouterElement;\n","import RouterElement from 'App/Router';\n\nimport s from './App.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.app}>\n      <RouterElement />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloProvider from 'App/ApolloProvider';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApolloProvider>\n        <App />\n      </ApolloProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1EPUx\",\"primary\":\"Button_primary__10wIM\",\"secondary\":\"Button_secondary__1rwRo\",\"small\":\"Button_small__s7vt_\",\"disabled\":\"Button_disabled__21T4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Typography_body__8m-MI\",\"labelText\":\"Typography_labelText__epKSJ\",\"buttonText\":\"Typography_buttonText__mZteb\",\"small\":\"Typography_small__3wXte\",\"h1\":\"Typography_h1__1Jdui\",\"h2\":\"Typography_h2__3lGIL\",\"h3\":\"Typography_h3__2v2Di\",\"h4\":\"Typography_h4__Ejkuq\",\"h5\":\"Typography_h5__104qR\",\"bold\":\"Typography_bold__gPMvT\",\"uppercase\":\"Typography_uppercase__1ypBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Icon_icon__3Qhyv\",\"small\":\"Icon_small__3pSY_\",\"medium\":\"Icon_medium__2aom0\",\"large\":\"Icon_large__3zgZX\",\"spin\":\"Icon_spin__3eeWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__30E71\",\"logo\":\"Header_logo__WwD6M\",\"logoWrapper\":\"Header_logoWrapper__2kHjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1Dk8M\",\"appLogo\":\"Home_appLogo__3r87T\",\"App-logo-spin\":\"Home_App-logo-spin__3puk-\"};"],"sourceRoot":""}